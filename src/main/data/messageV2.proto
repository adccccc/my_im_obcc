syntax = "proto2";

package com.sysu.obcc.tcp.proto;

option optimize_for = SPEED;
option java_package = "com.sysu.obcc.tcp.proto";
option java_outer_classname = "CcPacket";


// =========================请求报文==================================

// 客户端新建连接时发送的第一个报文，用于验证客户端身份
message AuthPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional string userId = 3;     // 用户id
    optional string token = 4;      // 验证令牌
}

// 客户端维持连接所使用的报文，连接建立后定时发送
message HeartBeatPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
}

// 好友消息报文，用于发送消息数据
message SingleChatPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务器时间戳
    optional string senderId = 4;   // 发送方id
    optional string receiverId = 5;     // 接收方id
    optional MessageType type = 6;      // 消息类型
    optional string content = 7;        // 消息内容

    // 消息类型，可在此处扩展
    enum MessageType {
        WORD = 0;   // 文字
        IMAGE = 1;  // 图片
        FILE = 2;   // 文件
    }
}

// 群聊消息报文，用于发送群消息数据
message GroupChatPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务器时间戳
    optional string senderId = 4;   // 发送方id
    optional string groupId = 5;     // 群id
    optional MessageType type = 6;      // 消息类型
    optional string content = 7;        // 消息内容

    // 消息类型，可在此处扩展
    enum MessageType {
        WORD = 0;   // 文字
        IMAGE = 1;  // 图片
        FILE = 2;   // 文件
    }
}

// 好友事件报文,用于处理好友关系
message FriendEventPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务器时间戳
    optional string senderId = 4;     // 发送方id
    optional string receiverId = 5;     // 接收方id
    optional EventType type = 6;        // 事件类型
    optional string content = 7;        // 附加消息

    // 事件类型，可在此处扩展
    enum EventType {
        ADD = 0;    // 请求添加好友
        INVITED = 1;    // 收到好友请求
        PASS = 2;   // 通过好友请求
        REJECT = 3;     // 拒绝好友请求
        IGNORE = 4;     // 忽略好友请求
        PASSED = 5;     // 已通过
        REJECTED = 6;   // 已被拒绝
        DELETE = 7;     // 删除好友
        DELETED = 8;    // 被删除
    }
}

// 群事件报文,用于处理群组关系
message GroupEventPacket {
    optional string messageId = 1;  // 报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务器时间戳
    optional string senderId = 4;     // 发送方id
    optional string receiverId = 5;     // 接收方id
    optional string groupId = 6;        // 群id
    optional EventType type = 7;        // 事件类型
    optional string content = 8;        // 附加消息

    // 事件类型，可在此处扩展
    enum EventType {
        ADD = 0;    // 请求加群(请求者)
        INVITE = 1;     // 邀请他人加群(邀请者)
        INVITED = 2;    // 收到加群请求(群管理/被邀请者)
        PASS = 3;   // 通过加群请求(群管理/被邀请者)
        REJECT = 4;     // 拒绝加群请求(群管理/被邀请者)
        IGNORE = 5;     // 忽略加群请求(群管理/被邀请者)
        PASSED = 6;     // 已通过
        REJECTED = 7;   // 已被拒绝
        KICK_OUT = 8;     // 踢出群(群管理)
        KICKED = 9;    // 被踢出群
        EXIT = 10;      // 退出群(群员)
    }
}

// ============================= 响应报文 ================================

// 通用响应报文，表示请求报文已处理
message AckPacket {
    optional string ackId = 1;      // 响应报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务端时间戳
    optional string content = 4;    // 附加内容(not used)
}

// Tcp连接未验证的情况下，服务端的响应报文，客户端收到此报文后需重新登录
message AuthErrorPacket {
    optional string ackId = 1;      // 响应报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务端时间戳
    optional string content = 4;    // 附加内容(not used)
}

// 非法好友消息或群消息的响应报文， 表示此消息因某原因发送失败
message InvalidChatPacket {
    optional string ackId = 1;      // 响应报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务端时间戳
    optional InvalidType type = 4;      // 失败类型

    // 失败类型， 可在此处扩展
    enum InvalidType {
        NOT_FRIEND = 0;     // 非好友
        NOT_IN_GROUP = 1;       // 非群员
        FORBIDDEN_IN_GROUP = 2;     // 被禁言
        BLACK_LISTED = 3;       // 被拉黑
    }
}

// 非法好友事件或群事件的响应报文，表示此事件因某原因处理失败
message InvalidEventPacket {
    optional string ackId = 1;      // 响应报文id
    optional int32 version = 2 [default = 1];     // 协议版本
    optional int64 timestamp = 3;   // 服务端时间戳
    optional InvalidType type = 4;      // 失败类型

    // 失败类型， 可在此处扩展
    enum InvalidType {
        ALREADY_FRIEND = 1;     // 已是好友
        ALREADY_IN_GROUP = 2;       // 已是群员
        NOT_FRIEND = 3;     // 不是好友
        NOT_IN_GROUP = 4;       // 不是群员
        PERMISSION_DENIED = 5;      // 没有权限操作
    }
}
